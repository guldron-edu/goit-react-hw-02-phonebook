{"version":3,"sources":["components/InputForm/InputForm.module.css","components/Contacts/Contacts.module.css","components/Input/Input.module.css","components/Filter/Filter.module.css","components/SingleContact/SingleContact.module.css","components/Input/Input.js","components/InputForm/InputForm.js","components/Filter/Filter.js","components/SingleContact/SingleContact.js","components/Contacts/Contacts.js","components/App.js","index.js"],"names":["module","exports","Input","type","name","value","inputTracking","placeholder","minLength","required","autoFocus","className","styles","input","onChange","ev","InputForm","state","number","preventDefault","setState","target","submitForm","props","addNewContact","resetInputForm","inputForm","onSubmit","this","label","btn","Component","Filter","wrapper","SingleContact","id","deleteContact","firstLetters","text","onClick","phrase","trim","split","map","word","toUpperCase","substring","toLowerCase","join","Contacts","visibleContacts","list","contact","key","item","App","contacts","filter","tempContact","uuidv4","checkNameAndAdd","checkExistingName","targetName","includes","pushToContacts","prevState","alert","inputFilterTracking","filterContacts","targetId","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad016185.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"InputForm_inputForm__3pJbf\",\"label\":\"InputForm_label__2yBxI\",\"input\":\"InputForm_input__3elxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2ADkb\",\"item\":\"Contacts_item__2DENs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__-rDy8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__1VKsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"SingleContact_text__3NhFD\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Input.module.css\";\r\n\r\nfunction Input({\r\n  type,\r\n  name,\r\n  value,\r\n  inputTracking,\r\n  placeholder,\r\n  minLength,\r\n  required,\r\n  autoFocus,\r\n}) {\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      type={type}\r\n      name={name}\r\n      onChange={(ev) => inputTracking(ev)}\r\n      value={value}\r\n      placeholder={placeholder || \"\"}\r\n      minLength={minLength}\r\n      autoFocus={autoFocus}\r\n      required={required}\r\n    ></input>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  inputTracking: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n  minLength: PropTypes.number,\r\n  required: PropTypes.bool,\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./InputForm.module.css\";\r\n\r\nimport Input from \"../Input/Input\";\r\n\r\nexport default class InputForm extends Component {\r\n  static propTypes = {\r\n    addNewContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  inputTracking = (ev) => {\r\n    ev.preventDefault();\r\n    this.setState({ [ev.target.name]: ev.target.value });\r\n  };\r\n\r\n  submitForm = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    this.props.addNewContact(this.state.name, this.state.number);\r\n    this.resetInputForm();\r\n  };\r\n\r\n  resetInputForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.inputForm} onSubmit={this.submitForm}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <Input\r\n            type={\"input\"}\r\n            name={\"name\"}\r\n            value={this.state.name}\r\n            inputTracking={this.inputTracking}\r\n            minLength={3}\r\n            required\r\n            autoFocus\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <Input\r\n            type={\"number\"}\r\n            name={\"number\"}\r\n            value={this.state.number}\r\n            inputTracking={this.inputTracking}\r\n            minLength={10}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.btn} type={\"submit\"}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nimport Input from \"../Input/Input\";\r\n\r\nfunction Filter({ inputTracking }) {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Input\r\n        type={\"input\"}\r\n        name={\"filter\"}\r\n        inputTracking={inputTracking}\r\n        placeholder={\"Search\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  inputTracking: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./SingleContact.module.css\";\r\n\r\nfunction SingleContact({ name, number, id, deleteContact, firstLetters }) {\r\n  return (\r\n    <>\r\n      <span className={styles.text}>\r\n        {firstLetters(name)}: {number}\r\n      </span>\r\n      <button type=\"button\" onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nSingleContact.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  firstLetters: PropTypes.func.isRequired,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default SingleContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SingleContact from \"../SingleContact/SingleContact\";\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nfunction Contacts({ visibleContacts, deleteContact }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {visibleContacts.map((contact) => (\r\n        <li key={contact.id} className={styles.item}>\r\n          <SingleContact\r\n            name={contact.name}\r\n            number={contact.number}\r\n            id={contact.id}\r\n            deleteContact={deleteContact}\r\n            firstLetters={firstLetters}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction firstLetters(phrase) {\r\n  return phrase\r\n    .trim()\r\n    .split(\" \")\r\n    .map((word) => {\r\n      return word[0].toUpperCase() + word.substring(1).toLowerCase();\r\n    })\r\n    .join(\" \");\r\n}\r\n\r\nContacts.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  visibleContacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\nimport InputForm from \"./InputForm/InputForm\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  addNewContact = (name, number) => {\r\n    const tempContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.checkNameAndAdd(name, tempContact);\r\n  };\r\n\r\n  checkExistingName = (targetName) => {\r\n    return this.state.contacts\r\n      .map((contact) => contact.name.toLowerCase().trim())\r\n      .includes(targetName.toLowerCase().trim());\r\n  };\r\n\r\n  pushToContacts = (contact) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  checkNameAndAdd = (name, tempContact) => {\r\n    this.checkExistingName(name)\r\n      ? alert(name + ` is already in contacts`)\r\n      : this.pushToContacts(tempContact);\r\n  };\r\n\r\n  inputFilterTracking = (ev) => {\r\n    this.setState({ filter: ev.target.value });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    return this.state.contacts.filter((contact) =>\r\n      (contact.name.toLowerCase() + contact.number.toLowerCase()).includes(\r\n        this.state.filter.toLowerCase()\r\n      )\r\n    );\r\n  };\r\n\r\n  deleteContact = (targetId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== targetId),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.filterContacts();\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <InputForm addNewContact={this.addNewContact} />\r\n\r\n        {this.state.contacts.length > 0 && <h2>Contacts</h2>}\r\n        {this.state.contacts.length > 1 && (\r\n          <Filter inputTracking={this.inputFilterTracking} />\r\n        )}\r\n        {this.state.contacts.length > 0 && (\r\n          <Contacts\r\n            visibleContacts={visibleContacts}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}